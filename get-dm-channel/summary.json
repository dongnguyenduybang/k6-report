{
  "testResults": {
    "detailedResults": {
      "summary": {
        "totalTests": 5,
        "passed": 3,
        "failed": 2,
        "warnings": 0,
        "successRate": "60.00%"
      },
      "failedTests": [
        {
          "expectedErrors": [
            "Could not resolve permission type"
          ],
          "actualErrors": [
            "Unauthorized request"
          ],
          "path": "::Test case #1: should return errors [\"Could not resolve permission type\"] when body {\"userId\":123}",
          "id": "108b854cc1fc107b4aa3f634b1e7c97e",
          "timestamp": "2025-07-19T03:47:21.199Z",
          "missing": [
            "Unauthorized request"
          ],
          "extra": [
            "Could not resolve permission type"
          ]
        },
        {
          "expectedErrors": [
            "Could not resolve permission type"
          ],
          "actualErrors": [
            "Unauthorized request"
          ],
          "path": "::Test case #3: should return errors [\"Could not resolve permission type\"] when body {\"userId\":null}",
          "id": "2826e5bd64872beca273ac31d0c82694",
          "timestamp": "2025-07-19T03:47:21.201Z",
          "missing": [
            "Unauthorized request"
          ],
          "extra": [
            "Could not resolve permission type"
          ]
        }
      ],
      "warnings": [],
      "passedTests": [
          {
            "expectedErrors": [
              "Could not resolve permission type"
            ],
            "actualErrors": [
              "Could not resolve permission type"
            ],
            "path": "::Test case #2: should return errors [\"Could not resolve permission type\"] when body {\"userId\":\"\"}",
            "id": "f85bae0432de6450ec7a62281a9e14bd",
            "timestamp": "2025-07-19T03:47:21.200Z"
          },
          {
            "expectedErrors": [
              "Unauthorized request"
            ],
            "actualErrors": [
              "Unauthorized request"
            ],
            "path": "::Test case #4: should return errors [\"Unauthorized request\"] when body {\"userId\":\"invalid_value\"}",
            "id": "025579740a8a88e30941e367e865277d",
            "timestamp": "2025-07-19T03:47:21.201Z"
          },
          {
            "expectedErrors": [],
            "actualErrors": [],
            "path": "::Test case #5: should return errors [] when body {\"userId\":\"{{userId}}\"}",
            "id": "6a487c30622770aafa830af278bdff10",
            "timestamp": "2025-07-19T03:47:21.201Z"
          }
        ]
    }
  },
  "metrics": {
    "http_reqs": {
      "count": 5,
      "rate": 0.9502262916402227
    },
    "http_req_duration": {
      "p(95)": 78.20078,
      "avg": 43.01282,
      "min": 21.6613,
      "med": 24.039,
      "max": 81.642,
      "p(90)": 74.75956
    },
    "http_req_connecting": {
      "p(95)": 9.248959999999997,
      "avg": 2.31224,
      "min": 0,
      "med": 0,
      "max": 11.5612,
      "p(90)": 6.936720000000001
    },
    "http_req_tls_handshaking": {
      "max": 18.9644,
      "p(90)": 11.378640000000003,
      "p(95)": 15.171519999999997,
      "avg": 3.7928800000000003,
      "min": 0,
      "med": 0
    },
    "iteration_duration": {
      "med": 5260.6324,
      "max": 5260.6324,
      "p(90)": 5260.6324,
      "p(95)": 5260.6324,
      "avg": 5260.6324,
      "min": 5260.6324
    },
    "http_req_waiting": {
      "med": 23.4879,
      "max": 72.567,
      "p(90)": 69.11207999999999,
      "p(95)": 70.83954,
      "avg": 38.81738,
      "min": 11.5841
    },
    "http_req_sending": {
      "p(90)": 0.7637800000000001,
      "p(95)": 0.82124,
      "avg": 0.48578,
      "min": 0,
      "med": 0.5062,
      "max": 0.8787
    },
    "http_req_receiving": {
      "min": 0,
      "med": 0.5511,
      "max": 9.1985,
      "p(90)": 8.91254,
      "p(95)": 9.05552,
      "avg": 3.7096599999999995
    },
    "http_req_blocked": {
      "avg": 6.38406,
      "min": 0,
      "med": 0,
      "max": 31.9203,
      "p(90)": 19.152180000000005,
      "p(95)": 25.536239999999996
    },
    "vus": {
      "value": 1,
      "min": 1,
      "max": 1
    },
    "vus_max": {
      "value": 1,
      "min": 1,
      "max": 1
    },
    "totalTestsMetric": {
      "count": 5,
      "rate": 0.9502262916402227
    },
    "passedTestsMetric": {
      "count": 3,
      "rate": 0.5701357749841336
    },
    "failedTestsMetric": {
      "count": 2,
      "rate": 0.38009051665608906
    },
    "warningsMetric": {
      "count": 0
    }
  }
}