{
  "testResults": {
    "detailedResults": {
      "summary": {
        "totalTests": 4,
        "passed": 3,
        "failed": 0,
        "warnings": 1,
        "successRate": "75.00%"
      },
      "failedTests": [],
      "warnings": [
          {
            "expectedErrors": [
              "limit should not be empty",
              "limit range from 1 to 500"
            ],
            "actualErrors": [
              "limit range from 1 to 500"
            ],
            "path": "::Test case #3: should return errors [\"limit should not be empty\",\"limit range from 1 to 500\"] when body {\"limit\":\"\"}",
            "id": "677f6d9f2db12a03f924dfdb5284ed3f",
            "timestamp": "2025-07-19T06:37:37.993Z",
            "warningMessage": "Actual errors include expected errors but don't match exactly"
          }
        ],
      "passedTests": [
          {
            "expectedErrors": [
              "limit expected number,received nan"
            ],
            "actualErrors": [
              "limit expected number",
              "received nan"
            ],
            "path": "::Test case #1: should return errors [\"limit expected number,received nan\"] when body {\"limit\":\"invalid_number\"}",
            "id": "a8183b1137c7c0f271dc41b2a8277dbb",
            "timestamp": "2025-07-19T06:37:37.993Z"
          },
          {
            "expectedErrors": [],
            "actualErrors": [],
            "path": "::Test case #2: should return errors [] when body {}",
            "id": "9eaa89f3956341387247d4723c000c4a",
            "timestamp": "2025-07-19T06:37:37.993Z"
          },
          {
            "expectedErrors": [],
            "actualErrors": [],
            "path": "::Test case #4: should return errors [] when body {\"limit\":1}",
            "id": "d8b890cf533e754a5cd0c4e2160bfb11",
            "timestamp": "2025-07-19T06:37:37.993Z"
          }
        ]
    }
  },
  "metrics": {
    "http_reqs": {
      "count": 4,
      "rate": 0.9612893119864941
    },
    "http_req_duration": {
      "p(95)": 34.823879999999996,
      "avg": 30.570325,
      "min": 25.2275,
      "med": 30.82495,
      "max": 35.4039,
      "p(90)": 34.24386
    },
    "http_req_connecting": {
      "avg": 2.62735,
      "min": 0,
      "med": 0,
      "max": 10.5094,
      "p(90)": 7.356580000000002,
      "p(95)": 8.932989999999995
    },
    "http_req_tls_handshaking": {
      "min": 0,
      "med": 0,
      "max": 16.2255,
      "p(90)": 11.357850000000003,
      "p(95)": 13.791674999999994,
      "avg": 4.056375
    },
    "iteration_duration": {
      "avg": 4159.2776,
      "min": 4159.2776,
      "med": 4159.2776,
      "max": 4159.2776,
      "p(90)": 4159.2776,
      "p(95)": 4159.2776
    },
    "http_req_waiting": {
      "avg": 29.903999999999996,
      "min": 23.9301,
      "med": 30.4617,
      "max": 34.7625,
      "p(90)": 33.79488,
      "p(95)": 34.27869
    },
    "http_req_sending": {
      "avg": 0.548025,
      "min": 0,
      "med": 0.6839500000000001,
      "max": 0.8242,
      "p(90)": 0.7948900000000001,
      "p(95)": 0.809545
    },
    "http_req_receiving": {
      "avg": 0.1183,
      "min": 0,
      "med": 0,
      "max": 0.4732,
      "p(90)": 0.3312400000000001,
      "p(95)": 0.40221999999999986
    },
    "http_req_blocked": {
      "p(95)": 23.81019999999999,
      "avg": 7.003,
      "min": 0,
      "med": 0,
      "max": 28.012,
      "p(90)": 19.608400000000007
    },
    "vus": {
      "value": 1,
      "min": 1,
      "max": 1
    },
    "vus_max": {
      "value": 1,
      "min": 1,
      "max": 1
    },
    "totalTestsMetric": {
      "count": 4,
      "rate": 0.9612893119864941
    },
    "passedTestsMetric": {
      "count": 3,
      "rate": 0.7209669839898706
    },
    "failedTestsMetric": {
      "count": 0,
      "rate": 0
    },
    "warningsMetric": {
      "count": 1,
      "rate": 0.24032232799662354
    }
  }
}